#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34014
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ConferentieSysteemData
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="ConferentieSysteemDatabase")]
	public partial class ConferentieSysteemDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertSessie(Sessie instance);
    partial void UpdateSessie(Sessie instance);
    partial void DeleteSessie(Sessie instance);
    partial void InsertBedrijf(Bedrijf instance);
    partial void UpdateBedrijf(Bedrijf instance);
    partial void DeleteBedrijf(Bedrijf instance);
    partial void InsertBetaald(Betaald instance);
    partial void UpdateBetaald(Betaald instance);
    partial void DeleteBetaald(Betaald instance);
    partial void InsertConferentie(Conferentie instance);
    partial void UpdateConferentie(Conferentie instance);
    partial void DeleteConferentie(Conferentie instance);
    partial void InsertConferentieDag(ConferentieDag instance);
    partial void UpdateConferentieDag(ConferentieDag instance);
    partial void DeleteConferentieDag(ConferentieDag instance);
    partial void InsertExpertise(Expertise instance);
    partial void UpdateExpertise(Expertise instance);
    partial void DeleteExpertise(Expertise instance);
    partial void InsertExpertiseDomein(ExpertiseDomein instance);
    partial void UpdateExpertiseDomein(ExpertiseDomein instance);
    partial void DeleteExpertiseDomein(ExpertiseDomein instance);
    partial void InsertFactuur(Factuur instance);
    partial void UpdateFactuur(Factuur instance);
    partial void DeleteFactuur(Factuur instance);
    partial void InsertFunctie(Functie instance);
    partial void UpdateFunctie(Functie instance);
    partial void DeleteFunctie(Functie instance);
    partial void InsertGemeente(Gemeente instance);
    partial void UpdateGemeente(Gemeente instance);
    partial void DeleteGemeente(Gemeente instance);
    partial void InsertInschrijvingConferntieDagLink(InschrijvingConferntieDagLink instance);
    partial void UpdateInschrijvingConferntieDagLink(InschrijvingConferntieDagLink instance);
    partial void DeleteInschrijvingConferntieDagLink(InschrijvingConferntieDagLink instance);
    partial void InsertLokaal(Lokaal instance);
    partial void UpdateLokaal(Lokaal instance);
    partial void DeleteLokaal(Lokaal instance);
    partial void InsertOvereenkomst(Overeenkomst instance);
    partial void UpdateOvereenkomst(Overeenkomst instance);
    partial void DeleteOvereenkomst(Overeenkomst instance);
    partial void InsertOvereenkomstExpertiseDomeinLink(OvereenkomstExpertiseDomeinLink instance);
    partial void UpdateOvereenkomstExpertiseDomeinLink(OvereenkomstExpertiseDomeinLink instance);
    partial void DeleteOvereenkomstExpertiseDomeinLink(OvereenkomstExpertiseDomeinLink instance);
    partial void InsertPersoon(Persoon instance);
    partial void UpdatePersoon(Persoon instance);
    partial void DeletePersoon(Persoon instance);
    partial void InsertPersoonExpertiseDomeinLink(PersoonExpertiseDomeinLink instance);
    partial void UpdatePersoonExpertiseDomeinLink(PersoonExpertiseDomeinLink instance);
    partial void DeletePersoonExpertiseDomeinLink(PersoonExpertiseDomeinLink instance);
    partial void InsertProvincie(Provincie instance);
    partial void UpdateProvincie(Provincie instance);
    partial void DeleteProvincie(Provincie instance);
    partial void InsertInschrijving(Inschrijving instance);
    partial void UpdateInschrijving(Inschrijving instance);
    partial void DeleteInschrijving(Inschrijving instance);
    partial void InsertEvaluatie(Evaluatie instance);
    partial void UpdateEvaluatie(Evaluatie instance);
    partial void DeleteEvaluatie(Evaluatie instance);
    #endregion
		
		public ConferentieSysteemDataContext() : 
				base(global::ConferentieSysteemData.Properties.Settings.Default.ConferentieSysteemDatabaseConnectionString2, mappingSource)
		{
			OnCreated();
		}
		
		public ConferentieSysteemDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ConferentieSysteemDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ConferentieSysteemDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ConferentieSysteemDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Sessie> Sessies
		{
			get
			{
				return this.GetTable<Sessie>();
			}
		}
		
		public System.Data.Linq.Table<Bedrijf> Bedrijfs
		{
			get
			{
				return this.GetTable<Bedrijf>();
			}
		}
		
		public System.Data.Linq.Table<Betaald> Betaalds
		{
			get
			{
				return this.GetTable<Betaald>();
			}
		}
		
		public System.Data.Linq.Table<Conferentie> Conferenties
		{
			get
			{
				return this.GetTable<Conferentie>();
			}
		}
		
		public System.Data.Linq.Table<ConferentieDag> ConferentieDags
		{
			get
			{
				return this.GetTable<ConferentieDag>();
			}
		}
		
		public System.Data.Linq.Table<Expertise> Expertises
		{
			get
			{
				return this.GetTable<Expertise>();
			}
		}
		
		public System.Data.Linq.Table<ExpertiseDomein> ExpertiseDomeins
		{
			get
			{
				return this.GetTable<ExpertiseDomein>();
			}
		}
		
		public System.Data.Linq.Table<Factuur> Factuurs
		{
			get
			{
				return this.GetTable<Factuur>();
			}
		}
		
		public System.Data.Linq.Table<Functie> Functies
		{
			get
			{
				return this.GetTable<Functie>();
			}
		}
		
		public System.Data.Linq.Table<Gemeente> Gemeentes
		{
			get
			{
				return this.GetTable<Gemeente>();
			}
		}
		
		public System.Data.Linq.Table<InschrijvingConferntieDagLink> InschrijvingConferntieDagLinks
		{
			get
			{
				return this.GetTable<InschrijvingConferntieDagLink>();
			}
		}
		
		public System.Data.Linq.Table<Lokaal> Lokaals
		{
			get
			{
				return this.GetTable<Lokaal>();
			}
		}
		
		public System.Data.Linq.Table<Overeenkomst> Overeenkomsts
		{
			get
			{
				return this.GetTable<Overeenkomst>();
			}
		}
		
		public System.Data.Linq.Table<OvereenkomstExpertiseDomeinLink> OvereenkomstExpertiseDomeinLinks
		{
			get
			{
				return this.GetTable<OvereenkomstExpertiseDomeinLink>();
			}
		}
		
		public System.Data.Linq.Table<Persoon> Persoons
		{
			get
			{
				return this.GetTable<Persoon>();
			}
		}
		
		public System.Data.Linq.Table<PersoonExpertiseDomeinLink> PersoonExpertiseDomeinLinks
		{
			get
			{
				return this.GetTable<PersoonExpertiseDomeinLink>();
			}
		}
		
		public System.Data.Linq.Table<Provincie> Provincies
		{
			get
			{
				return this.GetTable<Provincie>();
			}
		}
		
		public System.Data.Linq.Table<Inschrijving> Inschrijvings
		{
			get
			{
				return this.GetTable<Inschrijving>();
			}
		}
		
		public System.Data.Linq.Table<Evaluatie> Evaluaties
		{
			get
			{
				return this.GetTable<Evaluatie>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Sessie")]
	public partial class Sessie : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.TimeSpan _AanvangUur;
		
		private System.TimeSpan _EindUur;
		
		private int _ExpertID;
		
		private int _ConferentieDagID;
		
		private bool _IsKeynote;
		
		private int _LokaalID;
		
		private System.Nullable<int> _DomeinID;
		
		private EntitySet<Evaluatie> _Evaluaties;
		
		private EntityRef<ConferentieDag> _ConferentieDag;
		
		private EntityRef<ExpertiseDomein> _ExpertiseDomein;
		
		private EntityRef<Lokaal> _Lokaal;
		
		private EntityRef<Persoon> _Persoon;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnAanvangUurChanging(System.TimeSpan value);
    partial void OnAanvangUurChanged();
    partial void OnEindUurChanging(System.TimeSpan value);
    partial void OnEindUurChanged();
    partial void OnExpertIDChanging(int value);
    partial void OnExpertIDChanged();
    partial void OnConferentieDagIDChanging(int value);
    partial void OnConferentieDagIDChanged();
    partial void OnIsKeynoteChanging(bool value);
    partial void OnIsKeynoteChanged();
    partial void OnLokaalIDChanging(int value);
    partial void OnLokaalIDChanged();
    partial void OnDomeinIDChanging(System.Nullable<int> value);
    partial void OnDomeinIDChanged();
    #endregion
		
		public Sessie()
		{
			this._Evaluaties = new EntitySet<Evaluatie>(new Action<Evaluatie>(this.attach_Evaluaties), new Action<Evaluatie>(this.detach_Evaluaties));
			this._ConferentieDag = default(EntityRef<ConferentieDag>);
			this._ExpertiseDomein = default(EntityRef<ExpertiseDomein>);
			this._Lokaal = default(EntityRef<Lokaal>);
			this._Persoon = default(EntityRef<Persoon>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AanvangUur", DbType="Time NOT NULL")]
		public System.TimeSpan AanvangUur
		{
			get
			{
				return this._AanvangUur;
			}
			set
			{
				if ((this._AanvangUur != value))
				{
					this.OnAanvangUurChanging(value);
					this.SendPropertyChanging();
					this._AanvangUur = value;
					this.SendPropertyChanged("AanvangUur");
					this.OnAanvangUurChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EindUur", DbType="Time NOT NULL")]
		public System.TimeSpan EindUur
		{
			get
			{
				return this._EindUur;
			}
			set
			{
				if ((this._EindUur != value))
				{
					this.OnEindUurChanging(value);
					this.SendPropertyChanging();
					this._EindUur = value;
					this.SendPropertyChanged("EindUur");
					this.OnEindUurChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExpertID", DbType="Int NOT NULL")]
		public int ExpertID
		{
			get
			{
				return this._ExpertID;
			}
			set
			{
				if ((this._ExpertID != value))
				{
					if (this._Persoon.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnExpertIDChanging(value);
					this.SendPropertyChanging();
					this._ExpertID = value;
					this.SendPropertyChanged("ExpertID");
					this.OnExpertIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ConferentieDagID", DbType="Int NOT NULL")]
		public int ConferentieDagID
		{
			get
			{
				return this._ConferentieDagID;
			}
			set
			{
				if ((this._ConferentieDagID != value))
				{
					if (this._ConferentieDag.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnConferentieDagIDChanging(value);
					this.SendPropertyChanging();
					this._ConferentieDagID = value;
					this.SendPropertyChanged("ConferentieDagID");
					this.OnConferentieDagIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsKeynote", DbType="Bit NOT NULL")]
		public bool IsKeynote
		{
			get
			{
				return this._IsKeynote;
			}
			set
			{
				if ((this._IsKeynote != value))
				{
					this.OnIsKeynoteChanging(value);
					this.SendPropertyChanging();
					this._IsKeynote = value;
					this.SendPropertyChanged("IsKeynote");
					this.OnIsKeynoteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LokaalID", DbType="Int NOT NULL")]
		public int LokaalID
		{
			get
			{
				return this._LokaalID;
			}
			set
			{
				if ((this._LokaalID != value))
				{
					if (this._Lokaal.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLokaalIDChanging(value);
					this.SendPropertyChanging();
					this._LokaalID = value;
					this.SendPropertyChanged("LokaalID");
					this.OnLokaalIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DomeinID", DbType="Int")]
		public System.Nullable<int> DomeinID
		{
			get
			{
				return this._DomeinID;
			}
			set
			{
				if ((this._DomeinID != value))
				{
					if (this._ExpertiseDomein.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDomeinIDChanging(value);
					this.SendPropertyChanging();
					this._DomeinID = value;
					this.SendPropertyChanged("DomeinID");
					this.OnDomeinIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Sessie_Evaluatie", Storage="_Evaluaties", ThisKey="ID", OtherKey="SessieID")]
		public EntitySet<Evaluatie> Evaluaties
		{
			get
			{
				return this._Evaluaties;
			}
			set
			{
				this._Evaluaties.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ConferentieDag_Sessie", Storage="_ConferentieDag", ThisKey="ConferentieDagID", OtherKey="ID", IsForeignKey=true)]
		public ConferentieDag ConferentieDag
		{
			get
			{
				return this._ConferentieDag.Entity;
			}
			set
			{
				ConferentieDag previousValue = this._ConferentieDag.Entity;
				if (((previousValue != value) 
							|| (this._ConferentieDag.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ConferentieDag.Entity = null;
						previousValue.Sessies.Remove(this);
					}
					this._ConferentieDag.Entity = value;
					if ((value != null))
					{
						value.Sessies.Add(this);
						this._ConferentieDagID = value.ID;
					}
					else
					{
						this._ConferentieDagID = default(int);
					}
					this.SendPropertyChanged("ConferentieDag");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ExpertiseDomein_Sessie", Storage="_ExpertiseDomein", ThisKey="DomeinID", OtherKey="ID", IsForeignKey=true)]
		public ExpertiseDomein ExpertiseDomein
		{
			get
			{
				return this._ExpertiseDomein.Entity;
			}
			set
			{
				ExpertiseDomein previousValue = this._ExpertiseDomein.Entity;
				if (((previousValue != value) 
							|| (this._ExpertiseDomein.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ExpertiseDomein.Entity = null;
						previousValue.Sessies.Remove(this);
					}
					this._ExpertiseDomein.Entity = value;
					if ((value != null))
					{
						value.Sessies.Add(this);
						this._DomeinID = value.ID;
					}
					else
					{
						this._DomeinID = default(Nullable<int>);
					}
					this.SendPropertyChanged("ExpertiseDomein");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Lokaal_Sessie", Storage="_Lokaal", ThisKey="LokaalID", OtherKey="ID", IsForeignKey=true)]
		public Lokaal Lokaal
		{
			get
			{
				return this._Lokaal.Entity;
			}
			set
			{
				Lokaal previousValue = this._Lokaal.Entity;
				if (((previousValue != value) 
							|| (this._Lokaal.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Lokaal.Entity = null;
						previousValue.Sessies.Remove(this);
					}
					this._Lokaal.Entity = value;
					if ((value != null))
					{
						value.Sessies.Add(this);
						this._LokaalID = value.ID;
					}
					else
					{
						this._LokaalID = default(int);
					}
					this.SendPropertyChanged("Lokaal");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Persoon_Sessie", Storage="_Persoon", ThisKey="ExpertID", OtherKey="ID", IsForeignKey=true)]
		public Persoon Persoon
		{
			get
			{
				return this._Persoon.Entity;
			}
			set
			{
				Persoon previousValue = this._Persoon.Entity;
				if (((previousValue != value) 
							|| (this._Persoon.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Persoon.Entity = null;
						previousValue.Sessies.Remove(this);
					}
					this._Persoon.Entity = value;
					if ((value != null))
					{
						value.Sessies.Add(this);
						this._ExpertID = value.ID;
					}
					else
					{
						this._ExpertID = default(int);
					}
					this.SendPropertyChanged("Persoon");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Evaluaties(Evaluatie entity)
		{
			this.SendPropertyChanging();
			entity.Sessie = this;
		}
		
		private void detach_Evaluaties(Evaluatie entity)
		{
			this.SendPropertyChanging();
			entity.Sessie = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Bedrijf")]
	public partial class Bedrijf : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Bedrijfsnaam;
		
		private string _Straat;
		
		private string _Huisnummer;
		
		private int _GemeenteID;
		
		private string _TelefoonNummer;
		
		private string _GsmNummer;
		
		private string _EmailAdres;
		
		private string _BtwNummer;
		
		private EntitySet<Persoon> _Persoons;
		
		private EntityRef<Gemeente> _Gemeente;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnBedrijfsnaamChanging(string value);
    partial void OnBedrijfsnaamChanged();
    partial void OnStraatChanging(string value);
    partial void OnStraatChanged();
    partial void OnHuisnummerChanging(string value);
    partial void OnHuisnummerChanged();
    partial void OnGemeenteIDChanging(int value);
    partial void OnGemeenteIDChanged();
    partial void OnTelefoonNummerChanging(string value);
    partial void OnTelefoonNummerChanged();
    partial void OnGsmNummerChanging(string value);
    partial void OnGsmNummerChanged();
    partial void OnEmailAdresChanging(string value);
    partial void OnEmailAdresChanged();
    partial void OnBtwNummerChanging(string value);
    partial void OnBtwNummerChanged();
    #endregion
		
		public Bedrijf()
		{
			this._Persoons = new EntitySet<Persoon>(new Action<Persoon>(this.attach_Persoons), new Action<Persoon>(this.detach_Persoons));
			this._Gemeente = default(EntityRef<Gemeente>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Bedrijfsnaam", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Bedrijfsnaam
		{
			get
			{
				return this._Bedrijfsnaam;
			}
			set
			{
				if ((this._Bedrijfsnaam != value))
				{
					this.OnBedrijfsnaamChanging(value);
					this.SendPropertyChanging();
					this._Bedrijfsnaam = value;
					this.SendPropertyChanged("Bedrijfsnaam");
					this.OnBedrijfsnaamChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Straat", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Straat
		{
			get
			{
				return this._Straat;
			}
			set
			{
				if ((this._Straat != value))
				{
					this.OnStraatChanging(value);
					this.SendPropertyChanging();
					this._Straat = value;
					this.SendPropertyChanged("Straat");
					this.OnStraatChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Huisnummer", DbType="NVarChar(10) NOT NULL", CanBeNull=false)]
		public string Huisnummer
		{
			get
			{
				return this._Huisnummer;
			}
			set
			{
				if ((this._Huisnummer != value))
				{
					this.OnHuisnummerChanging(value);
					this.SendPropertyChanging();
					this._Huisnummer = value;
					this.SendPropertyChanged("Huisnummer");
					this.OnHuisnummerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GemeenteID", DbType="Int NOT NULL")]
		public int GemeenteID
		{
			get
			{
				return this._GemeenteID;
			}
			set
			{
				if ((this._GemeenteID != value))
				{
					if (this._Gemeente.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnGemeenteIDChanging(value);
					this.SendPropertyChanging();
					this._GemeenteID = value;
					this.SendPropertyChanged("GemeenteID");
					this.OnGemeenteIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TelefoonNummer", DbType="NVarChar(15) NOT NULL", CanBeNull=false)]
		public string TelefoonNummer
		{
			get
			{
				return this._TelefoonNummer;
			}
			set
			{
				if ((this._TelefoonNummer != value))
				{
					this.OnTelefoonNummerChanging(value);
					this.SendPropertyChanging();
					this._TelefoonNummer = value;
					this.SendPropertyChanged("TelefoonNummer");
					this.OnTelefoonNummerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GsmNummer", DbType="NVarChar(15) NOT NULL", CanBeNull=false)]
		public string GsmNummer
		{
			get
			{
				return this._GsmNummer;
			}
			set
			{
				if ((this._GsmNummer != value))
				{
					this.OnGsmNummerChanging(value);
					this.SendPropertyChanging();
					this._GsmNummer = value;
					this.SendPropertyChanged("GsmNummer");
					this.OnGsmNummerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmailAdres", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string EmailAdres
		{
			get
			{
				return this._EmailAdres;
			}
			set
			{
				if ((this._EmailAdres != value))
				{
					this.OnEmailAdresChanging(value);
					this.SendPropertyChanging();
					this._EmailAdres = value;
					this.SendPropertyChanged("EmailAdres");
					this.OnEmailAdresChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BtwNummer", DbType="NVarChar(30) NOT NULL", CanBeNull=false)]
		public string BtwNummer
		{
			get
			{
				return this._BtwNummer;
			}
			set
			{
				if ((this._BtwNummer != value))
				{
					this.OnBtwNummerChanging(value);
					this.SendPropertyChanging();
					this._BtwNummer = value;
					this.SendPropertyChanged("BtwNummer");
					this.OnBtwNummerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Bedrijf_Persoon", Storage="_Persoons", ThisKey="ID", OtherKey="BedrijfID")]
		public EntitySet<Persoon> Persoons
		{
			get
			{
				return this._Persoons;
			}
			set
			{
				this._Persoons.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Gemeente_Bedrijf", Storage="_Gemeente", ThisKey="GemeenteID", OtherKey="ID", IsForeignKey=true)]
		public Gemeente Gemeente
		{
			get
			{
				return this._Gemeente.Entity;
			}
			set
			{
				Gemeente previousValue = this._Gemeente.Entity;
				if (((previousValue != value) 
							|| (this._Gemeente.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Gemeente.Entity = null;
						previousValue.Bedrijfs.Remove(this);
					}
					this._Gemeente.Entity = value;
					if ((value != null))
					{
						value.Bedrijfs.Add(this);
						this._GemeenteID = value.ID;
					}
					else
					{
						this._GemeenteID = default(int);
					}
					this.SendPropertyChanged("Gemeente");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Persoons(Persoon entity)
		{
			this.SendPropertyChanging();
			entity.Bedrijf = this;
		}
		
		private void detach_Persoons(Persoon entity)
		{
			this.SendPropertyChanging();
			entity.Bedrijf = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Betaald")]
	public partial class Betaald : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private decimal _Bedrag;
		
		private int _FactuurID;
		
		private EntityRef<Factuur> _Factuur;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnBedragChanging(decimal value);
    partial void OnBedragChanged();
    partial void OnFactuurIDChanging(int value);
    partial void OnFactuurIDChanged();
    #endregion
		
		public Betaald()
		{
			this._Factuur = default(EntityRef<Factuur>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Bedrag", DbType="Decimal(18,0) NOT NULL")]
		public decimal Bedrag
		{
			get
			{
				return this._Bedrag;
			}
			set
			{
				if ((this._Bedrag != value))
				{
					this.OnBedragChanging(value);
					this.SendPropertyChanging();
					this._Bedrag = value;
					this.SendPropertyChanged("Bedrag");
					this.OnBedragChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FactuurID", DbType="Int NOT NULL")]
		public int FactuurID
		{
			get
			{
				return this._FactuurID;
			}
			set
			{
				if ((this._FactuurID != value))
				{
					if (this._Factuur.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFactuurIDChanging(value);
					this.SendPropertyChanging();
					this._FactuurID = value;
					this.SendPropertyChanged("FactuurID");
					this.OnFactuurIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Factuur_Betaald", Storage="_Factuur", ThisKey="FactuurID", OtherKey="ID", IsForeignKey=true)]
		public Factuur Factuur
		{
			get
			{
				return this._Factuur.Entity;
			}
			set
			{
				Factuur previousValue = this._Factuur.Entity;
				if (((previousValue != value) 
							|| (this._Factuur.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Factuur.Entity = null;
						previousValue.Betaalds.Remove(this);
					}
					this._Factuur.Entity = value;
					if ((value != null))
					{
						value.Betaalds.Add(this);
						this._FactuurID = value.ID;
					}
					else
					{
						this._FactuurID = default(int);
					}
					this.SendPropertyChanged("Factuur");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Conferentie")]
	public partial class Conferentie : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _NaamConferentie;
		
		private string _Beschrijving;
		
		private int _VoorzitterID;
		
		private System.DateTime _Inschrijvingslimiet;
		
		private int _MaxDeelnemers;
		
		private System.DateTime _StartInschrijvingen;
		
		private EntitySet<ConferentieDag> _ConferentieDags;
		
		private EntityRef<Persoon> _Persoon;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnNaamConferentieChanging(string value);
    partial void OnNaamConferentieChanged();
    partial void OnBeschrijvingChanging(string value);
    partial void OnBeschrijvingChanged();
    partial void OnVoorzitterIDChanging(int value);
    partial void OnVoorzitterIDChanged();
    partial void OnInschrijvingslimietChanging(System.DateTime value);
    partial void OnInschrijvingslimietChanged();
    partial void OnMaxDeelnemersChanging(int value);
    partial void OnMaxDeelnemersChanged();
    partial void OnStartInschrijvingenChanging(System.DateTime value);
    partial void OnStartInschrijvingenChanged();
    #endregion
		
		public Conferentie()
		{
			this._ConferentieDags = new EntitySet<ConferentieDag>(new Action<ConferentieDag>(this.attach_ConferentieDags), new Action<ConferentieDag>(this.detach_ConferentieDags));
			this._Persoon = default(EntityRef<Persoon>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NaamConferentie", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string NaamConferentie
		{
			get
			{
				return this._NaamConferentie;
			}
			set
			{
				if ((this._NaamConferentie != value))
				{
					this.OnNaamConferentieChanging(value);
					this.SendPropertyChanging();
					this._NaamConferentie = value;
					this.SendPropertyChanged("NaamConferentie");
					this.OnNaamConferentieChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Beschrijving", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string Beschrijving
		{
			get
			{
				return this._Beschrijving;
			}
			set
			{
				if ((this._Beschrijving != value))
				{
					this.OnBeschrijvingChanging(value);
					this.SendPropertyChanging();
					this._Beschrijving = value;
					this.SendPropertyChanged("Beschrijving");
					this.OnBeschrijvingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VoorzitterID", DbType="Int NOT NULL")]
		public int VoorzitterID
		{
			get
			{
				return this._VoorzitterID;
			}
			set
			{
				if ((this._VoorzitterID != value))
				{
					if (this._Persoon.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnVoorzitterIDChanging(value);
					this.SendPropertyChanging();
					this._VoorzitterID = value;
					this.SendPropertyChanged("VoorzitterID");
					this.OnVoorzitterIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Inschrijvingslimiet", DbType="Date NOT NULL")]
		public System.DateTime Inschrijvingslimiet
		{
			get
			{
				return this._Inschrijvingslimiet;
			}
			set
			{
				if ((this._Inschrijvingslimiet != value))
				{
					this.OnInschrijvingslimietChanging(value);
					this.SendPropertyChanging();
					this._Inschrijvingslimiet = value;
					this.SendPropertyChanged("Inschrijvingslimiet");
					this.OnInschrijvingslimietChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaxDeelnemers", DbType="Int NOT NULL")]
		public int MaxDeelnemers
		{
			get
			{
				return this._MaxDeelnemers;
			}
			set
			{
				if ((this._MaxDeelnemers != value))
				{
					this.OnMaxDeelnemersChanging(value);
					this.SendPropertyChanging();
					this._MaxDeelnemers = value;
					this.SendPropertyChanged("MaxDeelnemers");
					this.OnMaxDeelnemersChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartInschrijvingen", DbType="Date NOT NULL")]
		public System.DateTime StartInschrijvingen
		{
			get
			{
				return this._StartInschrijvingen;
			}
			set
			{
				if ((this._StartInschrijvingen != value))
				{
					this.OnStartInschrijvingenChanging(value);
					this.SendPropertyChanging();
					this._StartInschrijvingen = value;
					this.SendPropertyChanged("StartInschrijvingen");
					this.OnStartInschrijvingenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Conferentie_ConferentieDag", Storage="_ConferentieDags", ThisKey="ID", OtherKey="ConferentieID")]
		public EntitySet<ConferentieDag> ConferentieDags
		{
			get
			{
				return this._ConferentieDags;
			}
			set
			{
				this._ConferentieDags.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Persoon_Conferentie", Storage="_Persoon", ThisKey="VoorzitterID", OtherKey="ID", IsForeignKey=true)]
		public Persoon Persoon
		{
			get
			{
				return this._Persoon.Entity;
			}
			set
			{
				Persoon previousValue = this._Persoon.Entity;
				if (((previousValue != value) 
							|| (this._Persoon.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Persoon.Entity = null;
						previousValue.Conferenties.Remove(this);
					}
					this._Persoon.Entity = value;
					if ((value != null))
					{
						value.Conferenties.Add(this);
						this._VoorzitterID = value.ID;
					}
					else
					{
						this._VoorzitterID = default(int);
					}
					this.SendPropertyChanged("Persoon");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ConferentieDags(ConferentieDag entity)
		{
			this.SendPropertyChanging();
			entity.Conferentie = this;
		}
		
		private void detach_ConferentieDags(ConferentieDag entity)
		{
			this.SendPropertyChanging();
			entity.Conferentie = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ConferentieDag")]
	public partial class ConferentieDag : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.DateTime _Datum;
		
		private decimal _InschrijvingsGeld;
		
		private int _ConferentieID;
		
		private EntitySet<Sessie> _Sessies;
		
		private EntitySet<InschrijvingConferntieDagLink> _InschrijvingConferntieDagLinks;
		
		private EntityRef<Conferentie> _Conferentie;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnDatumChanging(System.DateTime value);
    partial void OnDatumChanged();
    partial void OnInschrijvingsGeldChanging(decimal value);
    partial void OnInschrijvingsGeldChanged();
    partial void OnConferentieIDChanging(int value);
    partial void OnConferentieIDChanged();
    #endregion
		
		public ConferentieDag()
		{
			this._Sessies = new EntitySet<Sessie>(new Action<Sessie>(this.attach_Sessies), new Action<Sessie>(this.detach_Sessies));
			this._InschrijvingConferntieDagLinks = new EntitySet<InschrijvingConferntieDagLink>(new Action<InschrijvingConferntieDagLink>(this.attach_InschrijvingConferntieDagLinks), new Action<InschrijvingConferntieDagLink>(this.detach_InschrijvingConferntieDagLinks));
			this._Conferentie = default(EntityRef<Conferentie>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Datum", DbType="Date NOT NULL")]
		public System.DateTime Datum
		{
			get
			{
				return this._Datum;
			}
			set
			{
				if ((this._Datum != value))
				{
					this.OnDatumChanging(value);
					this.SendPropertyChanging();
					this._Datum = value;
					this.SendPropertyChanged("Datum");
					this.OnDatumChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InschrijvingsGeld", DbType="Decimal(18,0) NOT NULL")]
		public decimal InschrijvingsGeld
		{
			get
			{
				return this._InschrijvingsGeld;
			}
			set
			{
				if ((this._InschrijvingsGeld != value))
				{
					this.OnInschrijvingsGeldChanging(value);
					this.SendPropertyChanging();
					this._InschrijvingsGeld = value;
					this.SendPropertyChanged("InschrijvingsGeld");
					this.OnInschrijvingsGeldChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ConferentieID", DbType="Int NOT NULL")]
		public int ConferentieID
		{
			get
			{
				return this._ConferentieID;
			}
			set
			{
				if ((this._ConferentieID != value))
				{
					if (this._Conferentie.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnConferentieIDChanging(value);
					this.SendPropertyChanging();
					this._ConferentieID = value;
					this.SendPropertyChanged("ConferentieID");
					this.OnConferentieIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ConferentieDag_Sessie", Storage="_Sessies", ThisKey="ID", OtherKey="ConferentieDagID")]
		public EntitySet<Sessie> Sessies
		{
			get
			{
				return this._Sessies;
			}
			set
			{
				this._Sessies.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ConferentieDag_InschrijvingConferntieDagLink", Storage="_InschrijvingConferntieDagLinks", ThisKey="ID", OtherKey="ConferentieDagID")]
		public EntitySet<InschrijvingConferntieDagLink> InschrijvingConferntieDagLinks
		{
			get
			{
				return this._InschrijvingConferntieDagLinks;
			}
			set
			{
				this._InschrijvingConferntieDagLinks.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Conferentie_ConferentieDag", Storage="_Conferentie", ThisKey="ConferentieID", OtherKey="ID", IsForeignKey=true)]
		public Conferentie Conferentie
		{
			get
			{
				return this._Conferentie.Entity;
			}
			set
			{
				Conferentie previousValue = this._Conferentie.Entity;
				if (((previousValue != value) 
							|| (this._Conferentie.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Conferentie.Entity = null;
						previousValue.ConferentieDags.Remove(this);
					}
					this._Conferentie.Entity = value;
					if ((value != null))
					{
						value.ConferentieDags.Add(this);
						this._ConferentieID = value.ID;
					}
					else
					{
						this._ConferentieID = default(int);
					}
					this.SendPropertyChanged("Conferentie");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Sessies(Sessie entity)
		{
			this.SendPropertyChanging();
			entity.ConferentieDag = this;
		}
		
		private void detach_Sessies(Sessie entity)
		{
			this.SendPropertyChanging();
			entity.ConferentieDag = null;
		}
		
		private void attach_InschrijvingConferntieDagLinks(InschrijvingConferntieDagLink entity)
		{
			this.SendPropertyChanging();
			entity.ConferentieDag = this;
		}
		
		private void detach_InschrijvingConferntieDagLinks(InschrijvingConferntieDagLink entity)
		{
			this.SendPropertyChanging();
			entity.ConferentieDag = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Expertise")]
	public partial class Expertise : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _ExpertiseNaam;
		
		private string _Beschrijving;
		
		private EntitySet<ExpertiseDomein> _ExpertiseDomeins;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnExpertiseNaamChanging(string value);
    partial void OnExpertiseNaamChanged();
    partial void OnBeschrijvingChanging(string value);
    partial void OnBeschrijvingChanged();
    #endregion
		
		public Expertise()
		{
			this._ExpertiseDomeins = new EntitySet<ExpertiseDomein>(new Action<ExpertiseDomein>(this.attach_ExpertiseDomeins), new Action<ExpertiseDomein>(this.detach_ExpertiseDomeins));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExpertiseNaam", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string ExpertiseNaam
		{
			get
			{
				return this._ExpertiseNaam;
			}
			set
			{
				if ((this._ExpertiseNaam != value))
				{
					this.OnExpertiseNaamChanging(value);
					this.SendPropertyChanging();
					this._ExpertiseNaam = value;
					this.SendPropertyChanged("ExpertiseNaam");
					this.OnExpertiseNaamChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Beschrijving", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string Beschrijving
		{
			get
			{
				return this._Beschrijving;
			}
			set
			{
				if ((this._Beschrijving != value))
				{
					this.OnBeschrijvingChanging(value);
					this.SendPropertyChanging();
					this._Beschrijving = value;
					this.SendPropertyChanged("Beschrijving");
					this.OnBeschrijvingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Expertise_ExpertiseDomein", Storage="_ExpertiseDomeins", ThisKey="ID", OtherKey="ExpertiseID")]
		public EntitySet<ExpertiseDomein> ExpertiseDomeins
		{
			get
			{
				return this._ExpertiseDomeins;
			}
			set
			{
				this._ExpertiseDomeins.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ExpertiseDomeins(ExpertiseDomein entity)
		{
			this.SendPropertyChanging();
			entity.Expertise = this;
		}
		
		private void detach_ExpertiseDomeins(ExpertiseDomein entity)
		{
			this.SendPropertyChanging();
			entity.Expertise = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ExpertiseDomein")]
	public partial class ExpertiseDomein : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _ExpertiseID;
		
		private string _ExpertiseDomeinNaam;
		
		private string _Beschrijving;
		
		private EntitySet<Sessie> _Sessies;
		
		private EntitySet<OvereenkomstExpertiseDomeinLink> _OvereenkomstExpertiseDomeinLinks;
		
		private EntitySet<PersoonExpertiseDomeinLink> _PersoonExpertiseDomeinLinks;
		
		private EntityRef<Expertise> _Expertise;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnExpertiseIDChanging(int value);
    partial void OnExpertiseIDChanged();
    partial void OnExpertiseDomeinNaamChanging(string value);
    partial void OnExpertiseDomeinNaamChanged();
    partial void OnBeschrijvingChanging(string value);
    partial void OnBeschrijvingChanged();
    #endregion
		
		public ExpertiseDomein()
		{
			this._Sessies = new EntitySet<Sessie>(new Action<Sessie>(this.attach_Sessies), new Action<Sessie>(this.detach_Sessies));
			this._OvereenkomstExpertiseDomeinLinks = new EntitySet<OvereenkomstExpertiseDomeinLink>(new Action<OvereenkomstExpertiseDomeinLink>(this.attach_OvereenkomstExpertiseDomeinLinks), new Action<OvereenkomstExpertiseDomeinLink>(this.detach_OvereenkomstExpertiseDomeinLinks));
			this._PersoonExpertiseDomeinLinks = new EntitySet<PersoonExpertiseDomeinLink>(new Action<PersoonExpertiseDomeinLink>(this.attach_PersoonExpertiseDomeinLinks), new Action<PersoonExpertiseDomeinLink>(this.detach_PersoonExpertiseDomeinLinks));
			this._Expertise = default(EntityRef<Expertise>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExpertiseID", DbType="Int NOT NULL")]
		public int ExpertiseID
		{
			get
			{
				return this._ExpertiseID;
			}
			set
			{
				if ((this._ExpertiseID != value))
				{
					if (this._Expertise.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnExpertiseIDChanging(value);
					this.SendPropertyChanging();
					this._ExpertiseID = value;
					this.SendPropertyChanged("ExpertiseID");
					this.OnExpertiseIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExpertiseDomeinNaam", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string ExpertiseDomeinNaam
		{
			get
			{
				return this._ExpertiseDomeinNaam;
			}
			set
			{
				if ((this._ExpertiseDomeinNaam != value))
				{
					this.OnExpertiseDomeinNaamChanging(value);
					this.SendPropertyChanging();
					this._ExpertiseDomeinNaam = value;
					this.SendPropertyChanged("ExpertiseDomeinNaam");
					this.OnExpertiseDomeinNaamChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Beschrijving", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string Beschrijving
		{
			get
			{
				return this._Beschrijving;
			}
			set
			{
				if ((this._Beschrijving != value))
				{
					this.OnBeschrijvingChanging(value);
					this.SendPropertyChanging();
					this._Beschrijving = value;
					this.SendPropertyChanged("Beschrijving");
					this.OnBeschrijvingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ExpertiseDomein_Sessie", Storage="_Sessies", ThisKey="ID", OtherKey="DomeinID")]
		public EntitySet<Sessie> Sessies
		{
			get
			{
				return this._Sessies;
			}
			set
			{
				this._Sessies.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ExpertiseDomein_OvereenkomstExpertiseDomeinLink", Storage="_OvereenkomstExpertiseDomeinLinks", ThisKey="ID", OtherKey="ExpertiseDomeinID")]
		public EntitySet<OvereenkomstExpertiseDomeinLink> OvereenkomstExpertiseDomeinLinks
		{
			get
			{
				return this._OvereenkomstExpertiseDomeinLinks;
			}
			set
			{
				this._OvereenkomstExpertiseDomeinLinks.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ExpertiseDomein_PersoonExpertiseDomeinLink", Storage="_PersoonExpertiseDomeinLinks", ThisKey="ID", OtherKey="ExpertiseDomeinID")]
		public EntitySet<PersoonExpertiseDomeinLink> PersoonExpertiseDomeinLinks
		{
			get
			{
				return this._PersoonExpertiseDomeinLinks;
			}
			set
			{
				this._PersoonExpertiseDomeinLinks.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Expertise_ExpertiseDomein", Storage="_Expertise", ThisKey="ExpertiseID", OtherKey="ID", IsForeignKey=true)]
		public Expertise Expertise
		{
			get
			{
				return this._Expertise.Entity;
			}
			set
			{
				Expertise previousValue = this._Expertise.Entity;
				if (((previousValue != value) 
							|| (this._Expertise.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Expertise.Entity = null;
						previousValue.ExpertiseDomeins.Remove(this);
					}
					this._Expertise.Entity = value;
					if ((value != null))
					{
						value.ExpertiseDomeins.Add(this);
						this._ExpertiseID = value.ID;
					}
					else
					{
						this._ExpertiseID = default(int);
					}
					this.SendPropertyChanged("Expertise");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Sessies(Sessie entity)
		{
			this.SendPropertyChanging();
			entity.ExpertiseDomein = this;
		}
		
		private void detach_Sessies(Sessie entity)
		{
			this.SendPropertyChanging();
			entity.ExpertiseDomein = null;
		}
		
		private void attach_OvereenkomstExpertiseDomeinLinks(OvereenkomstExpertiseDomeinLink entity)
		{
			this.SendPropertyChanging();
			entity.ExpertiseDomein = this;
		}
		
		private void detach_OvereenkomstExpertiseDomeinLinks(OvereenkomstExpertiseDomeinLink entity)
		{
			this.SendPropertyChanging();
			entity.ExpertiseDomein = null;
		}
		
		private void attach_PersoonExpertiseDomeinLinks(PersoonExpertiseDomeinLink entity)
		{
			this.SendPropertyChanging();
			entity.ExpertiseDomein = this;
		}
		
		private void detach_PersoonExpertiseDomeinLinks(PersoonExpertiseDomeinLink entity)
		{
			this.SendPropertyChanging();
			entity.ExpertiseDomein = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Factuur")]
	public partial class Factuur : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private decimal _TotaalBedrag;
		
		private System.Nullable<int> _InschrijvingID;
		
		private string _FactuurNummer;
		
		private System.DateTime _OpmaakDatum;
		
		private string _Bestandslokatie;
		
		private EntitySet<Betaald> _Betaalds;
		
		private EntityRef<Inschrijving> _Inschrijving;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnTotaalBedragChanging(decimal value);
    partial void OnTotaalBedragChanged();
    partial void OnInschrijvingIDChanging(System.Nullable<int> value);
    partial void OnInschrijvingIDChanged();
    partial void OnFactuurNummerChanging(string value);
    partial void OnFactuurNummerChanged();
    partial void OnOpmaakDatumChanging(System.DateTime value);
    partial void OnOpmaakDatumChanged();
    partial void OnBestandslokatieChanging(string value);
    partial void OnBestandslokatieChanged();
    #endregion
		
		public Factuur()
		{
			this._Betaalds = new EntitySet<Betaald>(new Action<Betaald>(this.attach_Betaalds), new Action<Betaald>(this.detach_Betaalds));
			this._Inschrijving = default(EntityRef<Inschrijving>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotaalBedrag", DbType="Decimal(18,0) NOT NULL")]
		public decimal TotaalBedrag
		{
			get
			{
				return this._TotaalBedrag;
			}
			set
			{
				if ((this._TotaalBedrag != value))
				{
					this.OnTotaalBedragChanging(value);
					this.SendPropertyChanging();
					this._TotaalBedrag = value;
					this.SendPropertyChanged("TotaalBedrag");
					this.OnTotaalBedragChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InschrijvingID", DbType="Int")]
		public System.Nullable<int> InschrijvingID
		{
			get
			{
				return this._InschrijvingID;
			}
			set
			{
				if ((this._InschrijvingID != value))
				{
					if (this._Inschrijving.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnInschrijvingIDChanging(value);
					this.SendPropertyChanging();
					this._InschrijvingID = value;
					this.SendPropertyChanged("InschrijvingID");
					this.OnInschrijvingIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FactuurNummer", DbType="NVarChar(10) NOT NULL", CanBeNull=false)]
		public string FactuurNummer
		{
			get
			{
				return this._FactuurNummer;
			}
			set
			{
				if ((this._FactuurNummer != value))
				{
					this.OnFactuurNummerChanging(value);
					this.SendPropertyChanging();
					this._FactuurNummer = value;
					this.SendPropertyChanged("FactuurNummer");
					this.OnFactuurNummerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OpmaakDatum", DbType="Date NOT NULL")]
		public System.DateTime OpmaakDatum
		{
			get
			{
				return this._OpmaakDatum;
			}
			set
			{
				if ((this._OpmaakDatum != value))
				{
					this.OnOpmaakDatumChanging(value);
					this.SendPropertyChanging();
					this._OpmaakDatum = value;
					this.SendPropertyChanged("OpmaakDatum");
					this.OnOpmaakDatumChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Bestandslokatie", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string Bestandslokatie
		{
			get
			{
				return this._Bestandslokatie;
			}
			set
			{
				if ((this._Bestandslokatie != value))
				{
					this.OnBestandslokatieChanging(value);
					this.SendPropertyChanging();
					this._Bestandslokatie = value;
					this.SendPropertyChanged("Bestandslokatie");
					this.OnBestandslokatieChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Factuur_Betaald", Storage="_Betaalds", ThisKey="ID", OtherKey="FactuurID")]
		public EntitySet<Betaald> Betaalds
		{
			get
			{
				return this._Betaalds;
			}
			set
			{
				this._Betaalds.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Inschrijving_Factuur", Storage="_Inschrijving", ThisKey="InschrijvingID", OtherKey="ID", IsForeignKey=true)]
		public Inschrijving Inschrijving
		{
			get
			{
				return this._Inschrijving.Entity;
			}
			set
			{
				Inschrijving previousValue = this._Inschrijving.Entity;
				if (((previousValue != value) 
							|| (this._Inschrijving.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Inschrijving.Entity = null;
						previousValue.Factuurs.Remove(this);
					}
					this._Inschrijving.Entity = value;
					if ((value != null))
					{
						value.Factuurs.Add(this);
						this._InschrijvingID = value.ID;
					}
					else
					{
						this._InschrijvingID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Inschrijving");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Betaalds(Betaald entity)
		{
			this.SendPropertyChanging();
			entity.Factuur = this;
		}
		
		private void detach_Betaalds(Betaald entity)
		{
			this.SendPropertyChanging();
			entity.Factuur = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Functie")]
	public partial class Functie : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _FunctieNaam;
		
		private EntitySet<Persoon> _Persoons;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnFunctieNaamChanging(string value);
    partial void OnFunctieNaamChanged();
    #endregion
		
		public Functie()
		{
			this._Persoons = new EntitySet<Persoon>(new Action<Persoon>(this.attach_Persoons), new Action<Persoon>(this.detach_Persoons));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FunctieNaam", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string FunctieNaam
		{
			get
			{
				return this._FunctieNaam;
			}
			set
			{
				if ((this._FunctieNaam != value))
				{
					this.OnFunctieNaamChanging(value);
					this.SendPropertyChanging();
					this._FunctieNaam = value;
					this.SendPropertyChanged("FunctieNaam");
					this.OnFunctieNaamChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Functie_Persoon", Storage="_Persoons", ThisKey="ID", OtherKey="FunctieID")]
		public EntitySet<Persoon> Persoons
		{
			get
			{
				return this._Persoons;
			}
			set
			{
				this._Persoons.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Persoons(Persoon entity)
		{
			this.SendPropertyChanging();
			entity.Functie = this;
		}
		
		private void detach_Persoons(Persoon entity)
		{
			this.SendPropertyChanging();
			entity.Functie = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Gemeente")]
	public partial class Gemeente : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _Postcode;
		
		private string _GemeenteNaam;
		
		private int _ProvincieID;
		
		private EntitySet<Bedrijf> _Bedrijfs;
		
		private EntitySet<Persoon> _Persoons;
		
		private EntityRef<Provincie> _Provincie;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnPostcodeChanging(int value);
    partial void OnPostcodeChanged();
    partial void OnGemeenteNaamChanging(string value);
    partial void OnGemeenteNaamChanged();
    partial void OnProvincieIDChanging(int value);
    partial void OnProvincieIDChanged();
    #endregion
		
		public Gemeente()
		{
			this._Bedrijfs = new EntitySet<Bedrijf>(new Action<Bedrijf>(this.attach_Bedrijfs), new Action<Bedrijf>(this.detach_Bedrijfs));
			this._Persoons = new EntitySet<Persoon>(new Action<Persoon>(this.attach_Persoons), new Action<Persoon>(this.detach_Persoons));
			this._Provincie = default(EntityRef<Provincie>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Postcode", DbType="Int NOT NULL")]
		public int Postcode
		{
			get
			{
				return this._Postcode;
			}
			set
			{
				if ((this._Postcode != value))
				{
					this.OnPostcodeChanging(value);
					this.SendPropertyChanging();
					this._Postcode = value;
					this.SendPropertyChanged("Postcode");
					this.OnPostcodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GemeenteNaam", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string GemeenteNaam
		{
			get
			{
				return this._GemeenteNaam;
			}
			set
			{
				if ((this._GemeenteNaam != value))
				{
					this.OnGemeenteNaamChanging(value);
					this.SendPropertyChanging();
					this._GemeenteNaam = value;
					this.SendPropertyChanged("GemeenteNaam");
					this.OnGemeenteNaamChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProvincieID", DbType="Int NOT NULL")]
		public int ProvincieID
		{
			get
			{
				return this._ProvincieID;
			}
			set
			{
				if ((this._ProvincieID != value))
				{
					if (this._Provincie.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProvincieIDChanging(value);
					this.SendPropertyChanging();
					this._ProvincieID = value;
					this.SendPropertyChanged("ProvincieID");
					this.OnProvincieIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Gemeente_Bedrijf", Storage="_Bedrijfs", ThisKey="ID", OtherKey="GemeenteID")]
		public EntitySet<Bedrijf> Bedrijfs
		{
			get
			{
				return this._Bedrijfs;
			}
			set
			{
				this._Bedrijfs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Gemeente_Persoon", Storage="_Persoons", ThisKey="ID", OtherKey="GemeenteID")]
		public EntitySet<Persoon> Persoons
		{
			get
			{
				return this._Persoons;
			}
			set
			{
				this._Persoons.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Provincie_Gemeente", Storage="_Provincie", ThisKey="ProvincieID", OtherKey="ID", IsForeignKey=true)]
		public Provincie Provincie
		{
			get
			{
				return this._Provincie.Entity;
			}
			set
			{
				Provincie previousValue = this._Provincie.Entity;
				if (((previousValue != value) 
							|| (this._Provincie.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Provincie.Entity = null;
						previousValue.Gemeentes.Remove(this);
					}
					this._Provincie.Entity = value;
					if ((value != null))
					{
						value.Gemeentes.Add(this);
						this._ProvincieID = value.ID;
					}
					else
					{
						this._ProvincieID = default(int);
					}
					this.SendPropertyChanged("Provincie");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Bedrijfs(Bedrijf entity)
		{
			this.SendPropertyChanging();
			entity.Gemeente = this;
		}
		
		private void detach_Bedrijfs(Bedrijf entity)
		{
			this.SendPropertyChanging();
			entity.Gemeente = null;
		}
		
		private void attach_Persoons(Persoon entity)
		{
			this.SendPropertyChanging();
			entity.Gemeente = this;
		}
		
		private void detach_Persoons(Persoon entity)
		{
			this.SendPropertyChanging();
			entity.Gemeente = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.InschrijvingConferntieDagLink")]
	public partial class InschrijvingConferntieDagLink : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _InschrijvingID;
		
		private int _ConferentieDagID;
		
		private EntityRef<ConferentieDag> _ConferentieDag;
		
		private EntityRef<Inschrijving> _Inschrijving;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnInschrijvingIDChanging(int value);
    partial void OnInschrijvingIDChanged();
    partial void OnConferentieDagIDChanging(int value);
    partial void OnConferentieDagIDChanged();
    #endregion
		
		public InschrijvingConferntieDagLink()
		{
			this._ConferentieDag = default(EntityRef<ConferentieDag>);
			this._Inschrijving = default(EntityRef<Inschrijving>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InschrijvingID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int InschrijvingID
		{
			get
			{
				return this._InschrijvingID;
			}
			set
			{
				if ((this._InschrijvingID != value))
				{
					if (this._Inschrijving.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnInschrijvingIDChanging(value);
					this.SendPropertyChanging();
					this._InschrijvingID = value;
					this.SendPropertyChanged("InschrijvingID");
					this.OnInschrijvingIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ConferentieDagID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ConferentieDagID
		{
			get
			{
				return this._ConferentieDagID;
			}
			set
			{
				if ((this._ConferentieDagID != value))
				{
					if (this._ConferentieDag.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnConferentieDagIDChanging(value);
					this.SendPropertyChanging();
					this._ConferentieDagID = value;
					this.SendPropertyChanged("ConferentieDagID");
					this.OnConferentieDagIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ConferentieDag_InschrijvingConferntieDagLink", Storage="_ConferentieDag", ThisKey="ConferentieDagID", OtherKey="ID", IsForeignKey=true)]
		public ConferentieDag ConferentieDag
		{
			get
			{
				return this._ConferentieDag.Entity;
			}
			set
			{
				ConferentieDag previousValue = this._ConferentieDag.Entity;
				if (((previousValue != value) 
							|| (this._ConferentieDag.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ConferentieDag.Entity = null;
						previousValue.InschrijvingConferntieDagLinks.Remove(this);
					}
					this._ConferentieDag.Entity = value;
					if ((value != null))
					{
						value.InschrijvingConferntieDagLinks.Add(this);
						this._ConferentieDagID = value.ID;
					}
					else
					{
						this._ConferentieDagID = default(int);
					}
					this.SendPropertyChanged("ConferentieDag");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Inschrijving_InschrijvingConferntieDagLink", Storage="_Inschrijving", ThisKey="InschrijvingID", OtherKey="ID", IsForeignKey=true)]
		public Inschrijving Inschrijving
		{
			get
			{
				return this._Inschrijving.Entity;
			}
			set
			{
				Inschrijving previousValue = this._Inschrijving.Entity;
				if (((previousValue != value) 
							|| (this._Inschrijving.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Inschrijving.Entity = null;
						previousValue.InschrijvingConferntieDagLinks.Remove(this);
					}
					this._Inschrijving.Entity = value;
					if ((value != null))
					{
						value.InschrijvingConferntieDagLinks.Add(this);
						this._InschrijvingID = value.ID;
					}
					else
					{
						this._InschrijvingID = default(int);
					}
					this.SendPropertyChanged("Inschrijving");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Lokaal")]
	public partial class Lokaal : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _LokaalNummer;
		
		private EntitySet<Sessie> _Sessies;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnLokaalNummerChanging(string value);
    partial void OnLokaalNummerChanged();
    #endregion
		
		public Lokaal()
		{
			this._Sessies = new EntitySet<Sessie>(new Action<Sessie>(this.attach_Sessies), new Action<Sessie>(this.detach_Sessies));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LokaalNummer", DbType="NVarChar(10) NOT NULL", CanBeNull=false)]
		public string LokaalNummer
		{
			get
			{
				return this._LokaalNummer;
			}
			set
			{
				if ((this._LokaalNummer != value))
				{
					this.OnLokaalNummerChanging(value);
					this.SendPropertyChanging();
					this._LokaalNummer = value;
					this.SendPropertyChanged("LokaalNummer");
					this.OnLokaalNummerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Lokaal_Sessie", Storage="_Sessies", ThisKey="ID", OtherKey="LokaalID")]
		public EntitySet<Sessie> Sessies
		{
			get
			{
				return this._Sessies;
			}
			set
			{
				this._Sessies.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Sessies(Sessie entity)
		{
			this.SendPropertyChanging();
			entity.Lokaal = this;
		}
		
		private void detach_Sessies(Sessie entity)
		{
			this.SendPropertyChanging();
			entity.Lokaal = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Overeenkomst")]
	public partial class Overeenkomst : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _ExpertID;
		
		private int _VoorzitterID;
		
		private System.DateTime _BeginDatum;
		
		private System.DateTime _EindDatum;
		
		private string _Bestandslokatie;
		
		private EntitySet<OvereenkomstExpertiseDomeinLink> _OvereenkomstExpertiseDomeinLinks;
		
		private EntityRef<Persoon> _Persoon;
		
		private EntityRef<Persoon> _Persoon1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnExpertIDChanging(int value);
    partial void OnExpertIDChanged();
    partial void OnVoorzitterIDChanging(int value);
    partial void OnVoorzitterIDChanged();
    partial void OnBeginDatumChanging(System.DateTime value);
    partial void OnBeginDatumChanged();
    partial void OnEindDatumChanging(System.DateTime value);
    partial void OnEindDatumChanged();
    partial void OnBestandslokatieChanging(string value);
    partial void OnBestandslokatieChanged();
    #endregion
		
		public Overeenkomst()
		{
			this._OvereenkomstExpertiseDomeinLinks = new EntitySet<OvereenkomstExpertiseDomeinLink>(new Action<OvereenkomstExpertiseDomeinLink>(this.attach_OvereenkomstExpertiseDomeinLinks), new Action<OvereenkomstExpertiseDomeinLink>(this.detach_OvereenkomstExpertiseDomeinLinks));
			this._Persoon = default(EntityRef<Persoon>);
			this._Persoon1 = default(EntityRef<Persoon>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExpertID", DbType="Int NOT NULL")]
		public int ExpertID
		{
			get
			{
				return this._ExpertID;
			}
			set
			{
				if ((this._ExpertID != value))
				{
					if (this._Persoon.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnExpertIDChanging(value);
					this.SendPropertyChanging();
					this._ExpertID = value;
					this.SendPropertyChanged("ExpertID");
					this.OnExpertIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VoorzitterID", DbType="Int NOT NULL")]
		public int VoorzitterID
		{
			get
			{
				return this._VoorzitterID;
			}
			set
			{
				if ((this._VoorzitterID != value))
				{
					if (this._Persoon1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnVoorzitterIDChanging(value);
					this.SendPropertyChanging();
					this._VoorzitterID = value;
					this.SendPropertyChanged("VoorzitterID");
					this.OnVoorzitterIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BeginDatum", DbType="Date NOT NULL")]
		public System.DateTime BeginDatum
		{
			get
			{
				return this._BeginDatum;
			}
			set
			{
				if ((this._BeginDatum != value))
				{
					this.OnBeginDatumChanging(value);
					this.SendPropertyChanging();
					this._BeginDatum = value;
					this.SendPropertyChanged("BeginDatum");
					this.OnBeginDatumChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EindDatum", DbType="Date NOT NULL")]
		public System.DateTime EindDatum
		{
			get
			{
				return this._EindDatum;
			}
			set
			{
				if ((this._EindDatum != value))
				{
					this.OnEindDatumChanging(value);
					this.SendPropertyChanging();
					this._EindDatum = value;
					this.SendPropertyChanged("EindDatum");
					this.OnEindDatumChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Bestandslokatie", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string Bestandslokatie
		{
			get
			{
				return this._Bestandslokatie;
			}
			set
			{
				if ((this._Bestandslokatie != value))
				{
					this.OnBestandslokatieChanging(value);
					this.SendPropertyChanging();
					this._Bestandslokatie = value;
					this.SendPropertyChanged("Bestandslokatie");
					this.OnBestandslokatieChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Overeenkomst_OvereenkomstExpertiseDomeinLink", Storage="_OvereenkomstExpertiseDomeinLinks", ThisKey="ID", OtherKey="OvereenkomstID")]
		public EntitySet<OvereenkomstExpertiseDomeinLink> OvereenkomstExpertiseDomeinLinks
		{
			get
			{
				return this._OvereenkomstExpertiseDomeinLinks;
			}
			set
			{
				this._OvereenkomstExpertiseDomeinLinks.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Persoon_Overeenkomst", Storage="_Persoon", ThisKey="ExpertID", OtherKey="ID", IsForeignKey=true)]
		public Persoon Persoon
		{
			get
			{
				return this._Persoon.Entity;
			}
			set
			{
				Persoon previousValue = this._Persoon.Entity;
				if (((previousValue != value) 
							|| (this._Persoon.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Persoon.Entity = null;
						previousValue.Overeenkomsts.Remove(this);
					}
					this._Persoon.Entity = value;
					if ((value != null))
					{
						value.Overeenkomsts.Add(this);
						this._ExpertID = value.ID;
					}
					else
					{
						this._ExpertID = default(int);
					}
					this.SendPropertyChanged("Persoon");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Persoon_Overeenkomst1", Storage="_Persoon1", ThisKey="VoorzitterID", OtherKey="ID", IsForeignKey=true)]
		public Persoon Persoon1
		{
			get
			{
				return this._Persoon1.Entity;
			}
			set
			{
				Persoon previousValue = this._Persoon1.Entity;
				if (((previousValue != value) 
							|| (this._Persoon1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Persoon1.Entity = null;
						previousValue.Overeenkomsts1.Remove(this);
					}
					this._Persoon1.Entity = value;
					if ((value != null))
					{
						value.Overeenkomsts1.Add(this);
						this._VoorzitterID = value.ID;
					}
					else
					{
						this._VoorzitterID = default(int);
					}
					this.SendPropertyChanged("Persoon1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_OvereenkomstExpertiseDomeinLinks(OvereenkomstExpertiseDomeinLink entity)
		{
			this.SendPropertyChanging();
			entity.Overeenkomst = this;
		}
		
		private void detach_OvereenkomstExpertiseDomeinLinks(OvereenkomstExpertiseDomeinLink entity)
		{
			this.SendPropertyChanging();
			entity.Overeenkomst = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.OvereenkomstExpertiseDomeinLink")]
	public partial class OvereenkomstExpertiseDomeinLink : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _OvereenkomstID;
		
		private int _ExpertiseDomeinID;
		
		private EntityRef<ExpertiseDomein> _ExpertiseDomein;
		
		private EntityRef<Overeenkomst> _Overeenkomst;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnOvereenkomstIDChanging(int value);
    partial void OnOvereenkomstIDChanged();
    partial void OnExpertiseDomeinIDChanging(int value);
    partial void OnExpertiseDomeinIDChanged();
    #endregion
		
		public OvereenkomstExpertiseDomeinLink()
		{
			this._ExpertiseDomein = default(EntityRef<ExpertiseDomein>);
			this._Overeenkomst = default(EntityRef<Overeenkomst>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OvereenkomstID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int OvereenkomstID
		{
			get
			{
				return this._OvereenkomstID;
			}
			set
			{
				if ((this._OvereenkomstID != value))
				{
					if (this._Overeenkomst.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnOvereenkomstIDChanging(value);
					this.SendPropertyChanging();
					this._OvereenkomstID = value;
					this.SendPropertyChanged("OvereenkomstID");
					this.OnOvereenkomstIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExpertiseDomeinID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ExpertiseDomeinID
		{
			get
			{
				return this._ExpertiseDomeinID;
			}
			set
			{
				if ((this._ExpertiseDomeinID != value))
				{
					if (this._ExpertiseDomein.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnExpertiseDomeinIDChanging(value);
					this.SendPropertyChanging();
					this._ExpertiseDomeinID = value;
					this.SendPropertyChanged("ExpertiseDomeinID");
					this.OnExpertiseDomeinIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ExpertiseDomein_OvereenkomstExpertiseDomeinLink", Storage="_ExpertiseDomein", ThisKey="ExpertiseDomeinID", OtherKey="ID", IsForeignKey=true)]
		public ExpertiseDomein ExpertiseDomein
		{
			get
			{
				return this._ExpertiseDomein.Entity;
			}
			set
			{
				ExpertiseDomein previousValue = this._ExpertiseDomein.Entity;
				if (((previousValue != value) 
							|| (this._ExpertiseDomein.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ExpertiseDomein.Entity = null;
						previousValue.OvereenkomstExpertiseDomeinLinks.Remove(this);
					}
					this._ExpertiseDomein.Entity = value;
					if ((value != null))
					{
						value.OvereenkomstExpertiseDomeinLinks.Add(this);
						this._ExpertiseDomeinID = value.ID;
					}
					else
					{
						this._ExpertiseDomeinID = default(int);
					}
					this.SendPropertyChanged("ExpertiseDomein");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Overeenkomst_OvereenkomstExpertiseDomeinLink", Storage="_Overeenkomst", ThisKey="OvereenkomstID", OtherKey="ID", IsForeignKey=true)]
		public Overeenkomst Overeenkomst
		{
			get
			{
				return this._Overeenkomst.Entity;
			}
			set
			{
				Overeenkomst previousValue = this._Overeenkomst.Entity;
				if (((previousValue != value) 
							|| (this._Overeenkomst.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Overeenkomst.Entity = null;
						previousValue.OvereenkomstExpertiseDomeinLinks.Remove(this);
					}
					this._Overeenkomst.Entity = value;
					if ((value != null))
					{
						value.OvereenkomstExpertiseDomeinLinks.Add(this);
						this._OvereenkomstID = value.ID;
					}
					else
					{
						this._OvereenkomstID = default(int);
					}
					this.SendPropertyChanged("Overeenkomst");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Persoon")]
	public partial class Persoon : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Voornaam;
		
		private string _Achternaam;
		
		private string _Straat;
		
		private string _Huisnummer;
		
		private int _GemeenteID;
		
		private string _TelefoonNummer;
		
		private string _GsmNummer;
		
		private string _EmailAdres;
		
		private int _FunctieID;
		
		private System.Nullable<int> _BedrijfID;
		
		private string _Gebruikernaam;
		
		private string _Wachtwoord;
		
		private EntitySet<Sessie> _Sessies;
		
		private EntitySet<Conferentie> _Conferenties;
		
		private EntitySet<Overeenkomst> _Overeenkomsts;
		
		private EntitySet<Overeenkomst> _Overeenkomsts1;
		
		private EntitySet<PersoonExpertiseDomeinLink> _PersoonExpertiseDomeinLinks;
		
		private EntitySet<Inschrijving> _Inschrijvings;
		
		private EntitySet<Evaluatie> _Evaluaties;
		
		private EntitySet<Evaluatie> _Evaluaties1;
		
		private EntityRef<Bedrijf> _Bedrijf;
		
		private EntityRef<Functie> _Functie;
		
		private EntityRef<Gemeente> _Gemeente;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnVoornaamChanging(string value);
    partial void OnVoornaamChanged();
    partial void OnAchternaamChanging(string value);
    partial void OnAchternaamChanged();
    partial void OnStraatChanging(string value);
    partial void OnStraatChanged();
    partial void OnHuisnummerChanging(string value);
    partial void OnHuisnummerChanged();
    partial void OnGemeenteIDChanging(int value);
    partial void OnGemeenteIDChanged();
    partial void OnTelefoonNummerChanging(string value);
    partial void OnTelefoonNummerChanged();
    partial void OnGsmNummerChanging(string value);
    partial void OnGsmNummerChanged();
    partial void OnEmailAdresChanging(string value);
    partial void OnEmailAdresChanged();
    partial void OnFunctieIDChanging(int value);
    partial void OnFunctieIDChanged();
    partial void OnBedrijfIDChanging(System.Nullable<int> value);
    partial void OnBedrijfIDChanged();
    partial void OnGebruikernaamChanging(string value);
    partial void OnGebruikernaamChanged();
    partial void OnWachtwoordChanging(string value);
    partial void OnWachtwoordChanged();
    #endregion
		
		public Persoon()
		{
			this._Sessies = new EntitySet<Sessie>(new Action<Sessie>(this.attach_Sessies), new Action<Sessie>(this.detach_Sessies));
			this._Conferenties = new EntitySet<Conferentie>(new Action<Conferentie>(this.attach_Conferenties), new Action<Conferentie>(this.detach_Conferenties));
			this._Overeenkomsts = new EntitySet<Overeenkomst>(new Action<Overeenkomst>(this.attach_Overeenkomsts), new Action<Overeenkomst>(this.detach_Overeenkomsts));
			this._Overeenkomsts1 = new EntitySet<Overeenkomst>(new Action<Overeenkomst>(this.attach_Overeenkomsts1), new Action<Overeenkomst>(this.detach_Overeenkomsts1));
			this._PersoonExpertiseDomeinLinks = new EntitySet<PersoonExpertiseDomeinLink>(new Action<PersoonExpertiseDomeinLink>(this.attach_PersoonExpertiseDomeinLinks), new Action<PersoonExpertiseDomeinLink>(this.detach_PersoonExpertiseDomeinLinks));
			this._Inschrijvings = new EntitySet<Inschrijving>(new Action<Inschrijving>(this.attach_Inschrijvings), new Action<Inschrijving>(this.detach_Inschrijvings));
			this._Evaluaties = new EntitySet<Evaluatie>(new Action<Evaluatie>(this.attach_Evaluaties), new Action<Evaluatie>(this.detach_Evaluaties));
			this._Evaluaties1 = new EntitySet<Evaluatie>(new Action<Evaluatie>(this.attach_Evaluaties1), new Action<Evaluatie>(this.detach_Evaluaties1));
			this._Bedrijf = default(EntityRef<Bedrijf>);
			this._Functie = default(EntityRef<Functie>);
			this._Gemeente = default(EntityRef<Gemeente>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Voornaam", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Voornaam
		{
			get
			{
				return this._Voornaam;
			}
			set
			{
				if ((this._Voornaam != value))
				{
					this.OnVoornaamChanging(value);
					this.SendPropertyChanging();
					this._Voornaam = value;
					this.SendPropertyChanged("Voornaam");
					this.OnVoornaamChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Achternaam", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Achternaam
		{
			get
			{
				return this._Achternaam;
			}
			set
			{
				if ((this._Achternaam != value))
				{
					this.OnAchternaamChanging(value);
					this.SendPropertyChanging();
					this._Achternaam = value;
					this.SendPropertyChanged("Achternaam");
					this.OnAchternaamChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Straat", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Straat
		{
			get
			{
				return this._Straat;
			}
			set
			{
				if ((this._Straat != value))
				{
					this.OnStraatChanging(value);
					this.SendPropertyChanging();
					this._Straat = value;
					this.SendPropertyChanged("Straat");
					this.OnStraatChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Huisnummer", DbType="NVarChar(10) NOT NULL", CanBeNull=false)]
		public string Huisnummer
		{
			get
			{
				return this._Huisnummer;
			}
			set
			{
				if ((this._Huisnummer != value))
				{
					this.OnHuisnummerChanging(value);
					this.SendPropertyChanging();
					this._Huisnummer = value;
					this.SendPropertyChanged("Huisnummer");
					this.OnHuisnummerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GemeenteID", DbType="Int NOT NULL")]
		public int GemeenteID
		{
			get
			{
				return this._GemeenteID;
			}
			set
			{
				if ((this._GemeenteID != value))
				{
					if (this._Gemeente.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnGemeenteIDChanging(value);
					this.SendPropertyChanging();
					this._GemeenteID = value;
					this.SendPropertyChanged("GemeenteID");
					this.OnGemeenteIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TelefoonNummer", DbType="NVarChar(15) NOT NULL", CanBeNull=false)]
		public string TelefoonNummer
		{
			get
			{
				return this._TelefoonNummer;
			}
			set
			{
				if ((this._TelefoonNummer != value))
				{
					this.OnTelefoonNummerChanging(value);
					this.SendPropertyChanging();
					this._TelefoonNummer = value;
					this.SendPropertyChanged("TelefoonNummer");
					this.OnTelefoonNummerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GsmNummer", DbType="NVarChar(15) NOT NULL", CanBeNull=false)]
		public string GsmNummer
		{
			get
			{
				return this._GsmNummer;
			}
			set
			{
				if ((this._GsmNummer != value))
				{
					this.OnGsmNummerChanging(value);
					this.SendPropertyChanging();
					this._GsmNummer = value;
					this.SendPropertyChanged("GsmNummer");
					this.OnGsmNummerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmailAdres", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string EmailAdres
		{
			get
			{
				return this._EmailAdres;
			}
			set
			{
				if ((this._EmailAdres != value))
				{
					this.OnEmailAdresChanging(value);
					this.SendPropertyChanging();
					this._EmailAdres = value;
					this.SendPropertyChanged("EmailAdres");
					this.OnEmailAdresChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FunctieID", DbType="Int NOT NULL")]
		public int FunctieID
		{
			get
			{
				return this._FunctieID;
			}
			set
			{
				if ((this._FunctieID != value))
				{
					if (this._Functie.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFunctieIDChanging(value);
					this.SendPropertyChanging();
					this._FunctieID = value;
					this.SendPropertyChanged("FunctieID");
					this.OnFunctieIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BedrijfID", DbType="Int")]
		public System.Nullable<int> BedrijfID
		{
			get
			{
				return this._BedrijfID;
			}
			set
			{
				if ((this._BedrijfID != value))
				{
					if (this._Bedrijf.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBedrijfIDChanging(value);
					this.SendPropertyChanging();
					this._BedrijfID = value;
					this.SendPropertyChanged("BedrijfID");
					this.OnBedrijfIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Gebruikernaam", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Gebruikernaam
		{
			get
			{
				return this._Gebruikernaam;
			}
			set
			{
				if ((this._Gebruikernaam != value))
				{
					this.OnGebruikernaamChanging(value);
					this.SendPropertyChanging();
					this._Gebruikernaam = value;
					this.SendPropertyChanged("Gebruikernaam");
					this.OnGebruikernaamChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Wachtwoord", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Wachtwoord
		{
			get
			{
				return this._Wachtwoord;
			}
			set
			{
				if ((this._Wachtwoord != value))
				{
					this.OnWachtwoordChanging(value);
					this.SendPropertyChanging();
					this._Wachtwoord = value;
					this.SendPropertyChanged("Wachtwoord");
					this.OnWachtwoordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Persoon_Sessie", Storage="_Sessies", ThisKey="ID", OtherKey="ExpertID")]
		public EntitySet<Sessie> Sessies
		{
			get
			{
				return this._Sessies;
			}
			set
			{
				this._Sessies.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Persoon_Conferentie", Storage="_Conferenties", ThisKey="ID", OtherKey="VoorzitterID")]
		public EntitySet<Conferentie> Conferenties
		{
			get
			{
				return this._Conferenties;
			}
			set
			{
				this._Conferenties.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Persoon_Overeenkomst", Storage="_Overeenkomsts", ThisKey="ID", OtherKey="ExpertID")]
		public EntitySet<Overeenkomst> Overeenkomsts
		{
			get
			{
				return this._Overeenkomsts;
			}
			set
			{
				this._Overeenkomsts.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Persoon_Overeenkomst1", Storage="_Overeenkomsts1", ThisKey="ID", OtherKey="VoorzitterID")]
		public EntitySet<Overeenkomst> Overeenkomsts1
		{
			get
			{
				return this._Overeenkomsts1;
			}
			set
			{
				this._Overeenkomsts1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Persoon_PersoonExpertiseDomeinLink", Storage="_PersoonExpertiseDomeinLinks", ThisKey="ID", OtherKey="ExpertID")]
		public EntitySet<PersoonExpertiseDomeinLink> PersoonExpertiseDomeinLinks
		{
			get
			{
				return this._PersoonExpertiseDomeinLinks;
			}
			set
			{
				this._PersoonExpertiseDomeinLinks.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Persoon_Inschrijving", Storage="_Inschrijvings", ThisKey="ID", OtherKey="DeelnemerID")]
		public EntitySet<Inschrijving> Inschrijvings
		{
			get
			{
				return this._Inschrijvings;
			}
			set
			{
				this._Inschrijvings.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Persoon_Evaluatie", Storage="_Evaluaties", ThisKey="ID", OtherKey="DeelnemerID")]
		public EntitySet<Evaluatie> Evaluaties
		{
			get
			{
				return this._Evaluaties;
			}
			set
			{
				this._Evaluaties.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Persoon_Evaluatie1", Storage="_Evaluaties1", ThisKey="ID", OtherKey="ExpertID")]
		public EntitySet<Evaluatie> Evaluaties1
		{
			get
			{
				return this._Evaluaties1;
			}
			set
			{
				this._Evaluaties1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Bedrijf_Persoon", Storage="_Bedrijf", ThisKey="BedrijfID", OtherKey="ID", IsForeignKey=true)]
		public Bedrijf Bedrijf
		{
			get
			{
				return this._Bedrijf.Entity;
			}
			set
			{
				Bedrijf previousValue = this._Bedrijf.Entity;
				if (((previousValue != value) 
							|| (this._Bedrijf.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Bedrijf.Entity = null;
						previousValue.Persoons.Remove(this);
					}
					this._Bedrijf.Entity = value;
					if ((value != null))
					{
						value.Persoons.Add(this);
						this._BedrijfID = value.ID;
					}
					else
					{
						this._BedrijfID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Bedrijf");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Functie_Persoon", Storage="_Functie", ThisKey="FunctieID", OtherKey="ID", IsForeignKey=true)]
		public Functie Functie
		{
			get
			{
				return this._Functie.Entity;
			}
			set
			{
				Functie previousValue = this._Functie.Entity;
				if (((previousValue != value) 
							|| (this._Functie.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Functie.Entity = null;
						previousValue.Persoons.Remove(this);
					}
					this._Functie.Entity = value;
					if ((value != null))
					{
						value.Persoons.Add(this);
						this._FunctieID = value.ID;
					}
					else
					{
						this._FunctieID = default(int);
					}
					this.SendPropertyChanged("Functie");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Gemeente_Persoon", Storage="_Gemeente", ThisKey="GemeenteID", OtherKey="ID", IsForeignKey=true)]
		public Gemeente Gemeente
		{
			get
			{
				return this._Gemeente.Entity;
			}
			set
			{
				Gemeente previousValue = this._Gemeente.Entity;
				if (((previousValue != value) 
							|| (this._Gemeente.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Gemeente.Entity = null;
						previousValue.Persoons.Remove(this);
					}
					this._Gemeente.Entity = value;
					if ((value != null))
					{
						value.Persoons.Add(this);
						this._GemeenteID = value.ID;
					}
					else
					{
						this._GemeenteID = default(int);
					}
					this.SendPropertyChanged("Gemeente");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Sessies(Sessie entity)
		{
			this.SendPropertyChanging();
			entity.Persoon = this;
		}
		
		private void detach_Sessies(Sessie entity)
		{
			this.SendPropertyChanging();
			entity.Persoon = null;
		}
		
		private void attach_Conferenties(Conferentie entity)
		{
			this.SendPropertyChanging();
			entity.Persoon = this;
		}
		
		private void detach_Conferenties(Conferentie entity)
		{
			this.SendPropertyChanging();
			entity.Persoon = null;
		}
		
		private void attach_Overeenkomsts(Overeenkomst entity)
		{
			this.SendPropertyChanging();
			entity.Persoon = this;
		}
		
		private void detach_Overeenkomsts(Overeenkomst entity)
		{
			this.SendPropertyChanging();
			entity.Persoon = null;
		}
		
		private void attach_Overeenkomsts1(Overeenkomst entity)
		{
			this.SendPropertyChanging();
			entity.Persoon1 = this;
		}
		
		private void detach_Overeenkomsts1(Overeenkomst entity)
		{
			this.SendPropertyChanging();
			entity.Persoon1 = null;
		}
		
		private void attach_PersoonExpertiseDomeinLinks(PersoonExpertiseDomeinLink entity)
		{
			this.SendPropertyChanging();
			entity.Persoon = this;
		}
		
		private void detach_PersoonExpertiseDomeinLinks(PersoonExpertiseDomeinLink entity)
		{
			this.SendPropertyChanging();
			entity.Persoon = null;
		}
		
		private void attach_Inschrijvings(Inschrijving entity)
		{
			this.SendPropertyChanging();
			entity.Persoon = this;
		}
		
		private void detach_Inschrijvings(Inschrijving entity)
		{
			this.SendPropertyChanging();
			entity.Persoon = null;
		}
		
		private void attach_Evaluaties(Evaluatie entity)
		{
			this.SendPropertyChanging();
			entity.Persoon = this;
		}
		
		private void detach_Evaluaties(Evaluatie entity)
		{
			this.SendPropertyChanging();
			entity.Persoon = null;
		}
		
		private void attach_Evaluaties1(Evaluatie entity)
		{
			this.SendPropertyChanging();
			entity.Persoon1 = this;
		}
		
		private void detach_Evaluaties1(Evaluatie entity)
		{
			this.SendPropertyChanging();
			entity.Persoon1 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PersoonExpertiseDomeinLink")]
	public partial class PersoonExpertiseDomeinLink : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ExpertID;
		
		private int _ExpertiseDomeinID;
		
		private EntityRef<Persoon> _Persoon;
		
		private EntityRef<ExpertiseDomein> _ExpertiseDomein;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnExpertIDChanging(int value);
    partial void OnExpertIDChanged();
    partial void OnExpertiseDomeinIDChanging(int value);
    partial void OnExpertiseDomeinIDChanged();
    #endregion
		
		public PersoonExpertiseDomeinLink()
		{
			this._Persoon = default(EntityRef<Persoon>);
			this._ExpertiseDomein = default(EntityRef<ExpertiseDomein>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExpertID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ExpertID
		{
			get
			{
				return this._ExpertID;
			}
			set
			{
				if ((this._ExpertID != value))
				{
					if (this._Persoon.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnExpertIDChanging(value);
					this.SendPropertyChanging();
					this._ExpertID = value;
					this.SendPropertyChanged("ExpertID");
					this.OnExpertIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExpertiseDomeinID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ExpertiseDomeinID
		{
			get
			{
				return this._ExpertiseDomeinID;
			}
			set
			{
				if ((this._ExpertiseDomeinID != value))
				{
					if (this._ExpertiseDomein.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnExpertiseDomeinIDChanging(value);
					this.SendPropertyChanging();
					this._ExpertiseDomeinID = value;
					this.SendPropertyChanged("ExpertiseDomeinID");
					this.OnExpertiseDomeinIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Persoon_PersoonExpertiseDomeinLink", Storage="_Persoon", ThisKey="ExpertID", OtherKey="ID", IsForeignKey=true)]
		public Persoon Persoon
		{
			get
			{
				return this._Persoon.Entity;
			}
			set
			{
				Persoon previousValue = this._Persoon.Entity;
				if (((previousValue != value) 
							|| (this._Persoon.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Persoon.Entity = null;
						previousValue.PersoonExpertiseDomeinLinks.Remove(this);
					}
					this._Persoon.Entity = value;
					if ((value != null))
					{
						value.PersoonExpertiseDomeinLinks.Add(this);
						this._ExpertID = value.ID;
					}
					else
					{
						this._ExpertID = default(int);
					}
					this.SendPropertyChanged("Persoon");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ExpertiseDomein_PersoonExpertiseDomeinLink", Storage="_ExpertiseDomein", ThisKey="ExpertiseDomeinID", OtherKey="ID", IsForeignKey=true)]
		public ExpertiseDomein ExpertiseDomein
		{
			get
			{
				return this._ExpertiseDomein.Entity;
			}
			set
			{
				ExpertiseDomein previousValue = this._ExpertiseDomein.Entity;
				if (((previousValue != value) 
							|| (this._ExpertiseDomein.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ExpertiseDomein.Entity = null;
						previousValue.PersoonExpertiseDomeinLinks.Remove(this);
					}
					this._ExpertiseDomein.Entity = value;
					if ((value != null))
					{
						value.PersoonExpertiseDomeinLinks.Add(this);
						this._ExpertiseDomeinID = value.ID;
					}
					else
					{
						this._ExpertiseDomeinID = default(int);
					}
					this.SendPropertyChanged("ExpertiseDomein");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Provincie")]
	public partial class Provincie : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _ProvincieNaam;
		
		private EntitySet<Gemeente> _Gemeentes;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnProvincieNaamChanging(string value);
    partial void OnProvincieNaamChanged();
    #endregion
		
		public Provincie()
		{
			this._Gemeentes = new EntitySet<Gemeente>(new Action<Gemeente>(this.attach_Gemeentes), new Action<Gemeente>(this.detach_Gemeentes));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProvincieNaam", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string ProvincieNaam
		{
			get
			{
				return this._ProvincieNaam;
			}
			set
			{
				if ((this._ProvincieNaam != value))
				{
					this.OnProvincieNaamChanging(value);
					this.SendPropertyChanging();
					this._ProvincieNaam = value;
					this.SendPropertyChanged("ProvincieNaam");
					this.OnProvincieNaamChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Provincie_Gemeente", Storage="_Gemeentes", ThisKey="ID", OtherKey="ProvincieID")]
		public EntitySet<Gemeente> Gemeentes
		{
			get
			{
				return this._Gemeentes;
			}
			set
			{
				this._Gemeentes.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Gemeentes(Gemeente entity)
		{
			this.SendPropertyChanging();
			entity.Provincie = this;
		}
		
		private void detach_Gemeentes(Gemeente entity)
		{
			this.SendPropertyChanging();
			entity.Provincie = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Inschrijving")]
	public partial class Inschrijving : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _DeelnemerID;
		
		private System.DateTime _Datum;
		
		private EntitySet<Factuur> _Factuurs;
		
		private EntitySet<InschrijvingConferntieDagLink> _InschrijvingConferntieDagLinks;
		
		private EntityRef<Persoon> _Persoon;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnDeelnemerIDChanging(int value);
    partial void OnDeelnemerIDChanged();
    partial void OnDatumChanging(System.DateTime value);
    partial void OnDatumChanged();
    #endregion
		
		public Inschrijving()
		{
			this._Factuurs = new EntitySet<Factuur>(new Action<Factuur>(this.attach_Factuurs), new Action<Factuur>(this.detach_Factuurs));
			this._InschrijvingConferntieDagLinks = new EntitySet<InschrijvingConferntieDagLink>(new Action<InschrijvingConferntieDagLink>(this.attach_InschrijvingConferntieDagLinks), new Action<InschrijvingConferntieDagLink>(this.detach_InschrijvingConferntieDagLinks));
			this._Persoon = default(EntityRef<Persoon>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeelnemerID", DbType="Int NOT NULL")]
		public int DeelnemerID
		{
			get
			{
				return this._DeelnemerID;
			}
			set
			{
				if ((this._DeelnemerID != value))
				{
					if (this._Persoon.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDeelnemerIDChanging(value);
					this.SendPropertyChanging();
					this._DeelnemerID = value;
					this.SendPropertyChanged("DeelnemerID");
					this.OnDeelnemerIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Datum", DbType="Date NOT NULL")]
		public System.DateTime Datum
		{
			get
			{
				return this._Datum;
			}
			set
			{
				if ((this._Datum != value))
				{
					this.OnDatumChanging(value);
					this.SendPropertyChanging();
					this._Datum = value;
					this.SendPropertyChanged("Datum");
					this.OnDatumChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Inschrijving_Factuur", Storage="_Factuurs", ThisKey="ID", OtherKey="InschrijvingID")]
		public EntitySet<Factuur> Factuurs
		{
			get
			{
				return this._Factuurs;
			}
			set
			{
				this._Factuurs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Inschrijving_InschrijvingConferntieDagLink", Storage="_InschrijvingConferntieDagLinks", ThisKey="ID", OtherKey="InschrijvingID")]
		public EntitySet<InschrijvingConferntieDagLink> InschrijvingConferntieDagLinks
		{
			get
			{
				return this._InschrijvingConferntieDagLinks;
			}
			set
			{
				this._InschrijvingConferntieDagLinks.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Persoon_Inschrijving", Storage="_Persoon", ThisKey="DeelnemerID", OtherKey="ID", IsForeignKey=true)]
		public Persoon Persoon
		{
			get
			{
				return this._Persoon.Entity;
			}
			set
			{
				Persoon previousValue = this._Persoon.Entity;
				if (((previousValue != value) 
							|| (this._Persoon.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Persoon.Entity = null;
						previousValue.Inschrijvings.Remove(this);
					}
					this._Persoon.Entity = value;
					if ((value != null))
					{
						value.Inschrijvings.Add(this);
						this._DeelnemerID = value.ID;
					}
					else
					{
						this._DeelnemerID = default(int);
					}
					this.SendPropertyChanged("Persoon");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Factuurs(Factuur entity)
		{
			this.SendPropertyChanging();
			entity.Inschrijving = this;
		}
		
		private void detach_Factuurs(Factuur entity)
		{
			this.SendPropertyChanging();
			entity.Inschrijving = null;
		}
		
		private void attach_InschrijvingConferntieDagLinks(InschrijvingConferntieDagLink entity)
		{
			this.SendPropertyChanging();
			entity.Inschrijving = this;
		}
		
		private void detach_InschrijvingConferntieDagLinks(InschrijvingConferntieDagLink entity)
		{
			this.SendPropertyChanging();
			entity.Inschrijving = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Evaluatie")]
	public partial class Evaluatie : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _ExpertID;
		
		private int _DeelnemerID;
		
		private double _Schore;
		
		private string _Opmerkingen;
		
		private int _SessieID;
		
		private EntityRef<Persoon> _Persoon;
		
		private EntityRef<Persoon> _Persoon1;
		
		private EntityRef<Sessie> _Sessie;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnExpertIDChanging(int value);
    partial void OnExpertIDChanged();
    partial void OnDeelnemerIDChanging(int value);
    partial void OnDeelnemerIDChanged();
    partial void OnSchoreChanging(double value);
    partial void OnSchoreChanged();
    partial void OnOpmerkingenChanging(string value);
    partial void OnOpmerkingenChanged();
    partial void OnSessieIDChanging(int value);
    partial void OnSessieIDChanged();
    #endregion
		
		public Evaluatie()
		{
			this._Persoon = default(EntityRef<Persoon>);
			this._Persoon1 = default(EntityRef<Persoon>);
			this._Sessie = default(EntityRef<Sessie>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExpertID", DbType="Int NOT NULL")]
		public int ExpertID
		{
			get
			{
				return this._ExpertID;
			}
			set
			{
				if ((this._ExpertID != value))
				{
					if (this._Persoon1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnExpertIDChanging(value);
					this.SendPropertyChanging();
					this._ExpertID = value;
					this.SendPropertyChanged("ExpertID");
					this.OnExpertIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeelnemerID", DbType="Int NOT NULL")]
		public int DeelnemerID
		{
			get
			{
				return this._DeelnemerID;
			}
			set
			{
				if ((this._DeelnemerID != value))
				{
					if (this._Persoon.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDeelnemerIDChanging(value);
					this.SendPropertyChanging();
					this._DeelnemerID = value;
					this.SendPropertyChanged("DeelnemerID");
					this.OnDeelnemerIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Schore", DbType="Float NOT NULL")]
		public double Schore
		{
			get
			{
				return this._Schore;
			}
			set
			{
				if ((this._Schore != value))
				{
					this.OnSchoreChanging(value);
					this.SendPropertyChanging();
					this._Schore = value;
					this.SendPropertyChanged("Schore");
					this.OnSchoreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Opmerkingen", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string Opmerkingen
		{
			get
			{
				return this._Opmerkingen;
			}
			set
			{
				if ((this._Opmerkingen != value))
				{
					this.OnOpmerkingenChanging(value);
					this.SendPropertyChanging();
					this._Opmerkingen = value;
					this.SendPropertyChanged("Opmerkingen");
					this.OnOpmerkingenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SessieID", DbType="Int NOT NULL")]
		public int SessieID
		{
			get
			{
				return this._SessieID;
			}
			set
			{
				if ((this._SessieID != value))
				{
					if (this._Sessie.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSessieIDChanging(value);
					this.SendPropertyChanging();
					this._SessieID = value;
					this.SendPropertyChanged("SessieID");
					this.OnSessieIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Persoon_Evaluatie", Storage="_Persoon", ThisKey="DeelnemerID", OtherKey="ID", IsForeignKey=true)]
		public Persoon Persoon
		{
			get
			{
				return this._Persoon.Entity;
			}
			set
			{
				Persoon previousValue = this._Persoon.Entity;
				if (((previousValue != value) 
							|| (this._Persoon.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Persoon.Entity = null;
						previousValue.Evaluaties.Remove(this);
					}
					this._Persoon.Entity = value;
					if ((value != null))
					{
						value.Evaluaties.Add(this);
						this._DeelnemerID = value.ID;
					}
					else
					{
						this._DeelnemerID = default(int);
					}
					this.SendPropertyChanged("Persoon");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Persoon_Evaluatie1", Storage="_Persoon1", ThisKey="ExpertID", OtherKey="ID", IsForeignKey=true)]
		public Persoon Persoon1
		{
			get
			{
				return this._Persoon1.Entity;
			}
			set
			{
				Persoon previousValue = this._Persoon1.Entity;
				if (((previousValue != value) 
							|| (this._Persoon1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Persoon1.Entity = null;
						previousValue.Evaluaties1.Remove(this);
					}
					this._Persoon1.Entity = value;
					if ((value != null))
					{
						value.Evaluaties1.Add(this);
						this._ExpertID = value.ID;
					}
					else
					{
						this._ExpertID = default(int);
					}
					this.SendPropertyChanged("Persoon1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Sessie_Evaluatie", Storage="_Sessie", ThisKey="SessieID", OtherKey="ID", IsForeignKey=true)]
		public Sessie Sessie
		{
			get
			{
				return this._Sessie.Entity;
			}
			set
			{
				Sessie previousValue = this._Sessie.Entity;
				if (((previousValue != value) 
							|| (this._Sessie.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Sessie.Entity = null;
						previousValue.Evaluaties.Remove(this);
					}
					this._Sessie.Entity = value;
					if ((value != null))
					{
						value.Evaluaties.Add(this);
						this._SessieID = value.ID;
					}
					else
					{
						this._SessieID = default(int);
					}
					this.SendPropertyChanged("Sessie");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
